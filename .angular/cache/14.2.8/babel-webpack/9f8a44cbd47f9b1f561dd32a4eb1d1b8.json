{"ast":null,"code":"import _asyncToGenerator from \"D:/Francis/PROYECTOS/Pry_Condominio/condfrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nconst base_url = environment.base_url;\nexport class FileUploadService {\n  constructor() {}\n\n  actualizarFoto(archivo, tipo, id) {\n    return _asyncToGenerator(function* () {\n      try {\n        const url = `${base_url}/uploads/${tipo}/${id}`;\n        const formData = new FormData();\n        formData.append('imagen', archivo);\n        const resp = yield fetch(url, {\n          method: 'PUT',\n          headers: {\n            'x-token': localStorage.getItem('token') || ''\n          },\n          body: formData\n        });\n        const data = yield resp.json();\n\n        if (data.ok) {\n          return data.nombre;\n        } else {\n          console.log(data.msg);\n          return false;\n        }\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    })();\n  }\n\n}\n\nFileUploadService.ɵfac = function FileUploadService_Factory(t) {\n  return new (t || FileUploadService)();\n};\n\nFileUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FileUploadService,\n  factory: FileUploadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,QAAQ,GAAGD,WAAW,CAACC,QAA7B;AAKA,OAAM,MAAOC,iBAAP,CAAwB;EAE5BC,eAAiB;;EAEXC,cAAc,CAClBC,OADkB,EAElBC,IAFkB,EAGlBC,EAHkB,EAGP;IAAA;MAGX,IAAI;QACA,MAAMC,GAAG,GAAG,GAAGP,QAAQ,YAAYK,IAAI,IAAIC,EAAE,EAA7C;QACA,MAAME,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;QACAD,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BN,OAA1B;QAEA,MAAMO,IAAI,SAASC,KAAK,CAAEL,GAAF,EAAO;UAC7BM,MAAM,EAAE,KADqB;UAE7BC,OAAO,EAAC;YACN,WAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC;UADtC,CAFqB;UAK7BC,IAAI,EAAET;QALuB,CAAP,CAAxB;QAQA,MAAMU,IAAI,SAASP,IAAI,CAACQ,IAAL,EAAnB;;QACA,IAAGD,IAAI,CAACE,EAAR,EAAW;UACT,OAAOF,IAAI,CAACG,MAAZ;QACD,CAFD,MAEK;UACHC,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,GAAjB;UACA,OAAO,KAAP;QACD;MAEJ,CArBD,CAqBE,OAAOC,KAAP,EAAc;QACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;QACA,OAAO,KAAP;MACD;IA3BU;EA4BZ;;AAnC2B;;;mBAAjBxB;AAAiB;;;SAAjBA;EAAiByB,SAAjBzB,iBAAiB;EAAA0B,YAFhB","names":["environment","base_url","FileUploadService","constructor","actualizarFoto","archivo","tipo","id","url","formData","FormData","append","resp","fetch","method","headers","localStorage","getItem","body","data","json","ok","nombre","console","log","msg","error","factory","providedIn"],"sourceRoot":"","sources":["D:\\Francis\\PROYECTOS\\Pry_Condominio\\condfrontend\\src\\app\\services\\file-upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nconst base_url = environment.base_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\n  constructor() { }\n\n  async actualizarFoto(\n    archivo: File,\n    tipo: 'usuarios'|'empleados'|'companias',\n    id : string\n  )\n  {\n    try {\n        const url = `${base_url}/uploads/${tipo}/${id}`;\n        const formData = new FormData();\n        formData.append('imagen', archivo);\n\n        const resp = await fetch( url, {\n          method: 'PUT',\n          headers:{\n            'x-token': localStorage.getItem('token') || ''\n          },\n          body: formData\n        });\n\n        const data = await resp.json();\n        if(data.ok){\n          return data.nombre;\n        }else{\n          console.log(data.msg);\n          return false;\n        }\n  \n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}